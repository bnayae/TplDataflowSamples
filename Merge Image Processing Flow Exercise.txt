
		    						            										
		        		            
                      +----------+		            
		        +---> | Pixelate |---+	            
		        |	  +----------+   |	            
		        |                    |	           
+------------+   	                 |     +-------+	 +------------+
| Downloader |--+	                 +---->| Merge |---->| Show on UI |
+------------+  |    				 |     +-------+	 +------------+
                |					 |	                
                |     +----------+   |	                
                +---> | OilPaint |---+	                  
                   	  +----------+	               	  
                    	                             		
                                                      
				                                      
				                                          
										 

NuGet:
	SixLabors.ImageSharp
	SixLabors.ImageSharp.Drawing

Code Snippets:

using (Image<Rgba32> imageProcessor = Image.Load(buffer))
using (var outStream = new MemoryStream())
{
    imageProcessor.Mutate(x => x
						.OilPaint()
                        .Grayscale()
                        .DrawImage(img0, 1)
                        .DrawImage(img1, 1, new Point(size, 0)));
    imageProcessor.SaveAsJpeg(outStream);
}


var imageInfo = new SKImageInfo(size, size);
var mergeInfo = new SKImageInfo(size * 2, size);
using (var outStream = new MemoryStream())
using (var bitmap0 = SKBitmap.Decode(buffer1, imageInfo))
using (var bitmap1 = SKBitmap.Decode(buffer2, imageInfo))
using (var surface = SKSurface.Create(mergeInfo))
using (var paint = new SKPaint())
{
    SKCanvas canvas = surface.Canvas;
    canvas.DrawColor(SKColors.White);


    // draw the bitmap through the filter
    var rect = SKRect.Create(imageInfo.Size);
    canvas.DrawBitmap(bitmap0, rect, paint);
    rect = SKRect.Create(size, 0, size, size);
    canvas.DrawBitmap(bitmap1, rect, paint);

    SKData data = surface.Snapshot().Encode(SKEncodedImageFormat.Jpeg, 80);
    data.SaveTo(outStream);
    byte[] manipedImage = outStream.ToArray();
}
